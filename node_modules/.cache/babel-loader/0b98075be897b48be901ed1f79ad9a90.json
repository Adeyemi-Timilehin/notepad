{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prof_Timik_GCFR\\\\Desktop\\\\my-app\\\\src\\\\RootComp.jsx\";\n\n/* import React, { Component } from 'react';\r\n\r\nclass Rootcomp extends Component {\r\n  constructor(){\r\n      super()\r\n      this.state={\r\n  invalid:'very false'        \r\n      }\r\n  }\r\n    render() { \r\n        return (\r\n<div>\r\n        <h4>This is the fact and it is{this.state.invalid}</h4>\r\n</div>\r\n\r\n          );\r\n    }\r\n}\r\n \r\nexport default Rootcomp; */\n\n/* import React, {Component }from 'react'\r\n\r\nclass RootComp  extends Component {\r\n    constructor(){\r\n        super()\r\n    this.state = {isConnected:false  }}\r\n    render() { \r\n        let connectionStat;\r\n        if(this.state.isConnected){\r\n            connectionStat=\"You are connected to conservices\"\r\n        }\r\n        else{\r\n            connectionStat=\"You are disconnected from our services\"\r\n        }\r\n        return (\r\n        <div>\r\n            <p>{connectionStat}</p>\r\n        </div>  \r\n        );\r\n    }\r\n} */\n//export default RootComp ;\n\n/* import React, { Component } from 'react';\r\nimport Questions from './Questions'\r\nimport Quiz from './Quiz';\r\nclass RootComp extends Component {\r\n    constructor(){\r\n   super()\r\n   this.state={\r\n       problem:Questions\r\n   }\r\n}\r\n    render() { \r\n        const newProblem=  this.state.problem.map(item=> <Quiz\r\n            key={item.id}\r\n        firstq={item.firstq}\r\n        firsta={item.firsta}\r\n        firstop={item.firstop}\r\n        seconda={item.seconda}\r\n        secondop={item.secondop}\r\n        thirda={item.thirda}\r\n        thirdop={item.thirdop}\r\n            />)\r\n        \r\n\r\n        return (\r\n            <div>\r\n                {newProblem}\r\n            </div>\r\n          )\r\n    }\r\n}\r\n \r\nexport default RootComp; */\nimport React, { Component } from 'react';\n\nclass RootComp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      number: 0\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  clickHandler() {\n    this.setState(prevState => {\n      return {\n        number: prevState.number + 1\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 1\n      }\n    }, this.state.number), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 1\n      }\n    }, \"Punch to Increase\"));\n  }\n\n}\n\nexport default RootComp;","map":{"version":3,"sources":["C:/Users/Prof_Timik_GCFR/Desktop/my-app/src/RootComp.jsx"],"names":["React","Component","RootComp","constructor","state","number","clickHandler","bind","setState","prevState","render"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;;;;AAsBA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAC;AADA,KAAX;AAGA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACH;;AACDD,EAAAA,YAAY,GAAE;AACV,SAAKE,QAAL,CAAcC,SAAS,IAAE;AACrB,aAAM;AACFJ,QAAAA,MAAM,EAACI,SAAS,CAACJ,MAAV,GAAiB;AADtB,OAAN;AAGH,KAJD;AAKH;;AACDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWC,MAAhB,CADY,eAEZ;AAAQ,MAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFY,CADJ;AAMH;;AAtB4B;;AAyBjC,eAAeJ,QAAf","sourcesContent":["/* import React, { Component } from 'react';\r\n\r\nclass Rootcomp extends Component {\r\n  constructor(){\r\n      super()\r\n      this.state={\r\n  invalid:'very false'        \r\n      }\r\n  }\r\n    render() { \r\n        return (\r\n<div>\r\n        <h4>This is the fact and it is{this.state.invalid}</h4>\r\n</div>\r\n\r\n          );\r\n    }\r\n}\r\n \r\nexport default Rootcomp; */\r\n\r\n/* import React, {Component }from 'react'\r\n\r\nclass RootComp  extends Component {\r\n    constructor(){\r\n        super()\r\n    this.state = {isConnected:false  }}\r\n    render() { \r\n        let connectionStat;\r\n        if(this.state.isConnected){\r\n            connectionStat=\"You are connected to conservices\"\r\n        }\r\n        else{\r\n            connectionStat=\"You are disconnected from our services\"\r\n        }\r\n        return (\r\n        <div>\r\n            <p>{connectionStat}</p>\r\n        </div>  \r\n        );\r\n    }\r\n} */\r\n \r\n//export default RootComp ;\r\n/* import React, { Component } from 'react';\r\nimport Questions from './Questions'\r\nimport Quiz from './Quiz';\r\nclass RootComp extends Component {\r\n    constructor(){\r\n   super()\r\n   this.state={\r\n       problem:Questions\r\n   }\r\n}\r\n    render() { \r\n        const newProblem=  this.state.problem.map(item=> <Quiz\r\n            key={item.id}\r\n        firstq={item.firstq}\r\n        firsta={item.firsta}\r\n        firstop={item.firstop}\r\n        seconda={item.seconda}\r\n        secondop={item.secondop}\r\n        thirda={item.thirda}\r\n        thirdop={item.thirdop}\r\n            />)\r\n        \r\n\r\n        return (\r\n            <div>\r\n                {newProblem}\r\n            </div>\r\n          )\r\n    }\r\n}\r\n \r\nexport default RootComp; */\r\nimport React, { Component } from 'react';\r\nclass RootComp extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            number:0\r\n        }\r\n        this.clickHandler=this.clickHandler.bind(this)\r\n    }\r\n    clickHandler(){\r\n        this.setState(prevState=>{\r\n            return{\r\n                number:prevState.number+1\r\n            }\r\n        })\r\n    }\r\n    render() { \r\n        return (  \r\n            <div>\r\n<h3>{this.state.number}</h3>\r\n<button onClick={clickHandler}>Punch to Increase</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RootComp"]},"metadata":{},"sourceType":"module"}